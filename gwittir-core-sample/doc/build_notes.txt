Gwittir Sample Build Notes
==========================

PRE-REQS
--------

GWT (1.4.60/1.4.61)
Java 1.5 (or above)
Maven 2
MySQL (localhost with "contacts" schema and gwittir/example user/pass)


ENVIRONMENT
-----------

The Gwittir sample uses the GWT-Maven plugin, which requires that you
establish "google.webtoolkit.home" as a Maven property. 
If you set the environment variable "GWT_HOME" the included Maven POM (pom.xml)
will pick that up and use it as google.webtoolkit.home automatically 
(this only works if you don't override the POM with settings.xml or 
profiles.xml, etc).

Alternatively, if you already have a settings.xml file, or profiles.xml 
(you already use Maven, for example), you need to make sure you have a 
profile for GWT - something along the lines of what is shown below 
(but again, you only need to do this if you want to override the POM):

<?xml version="1.0" encoding="UTF-8"?>
 <settings>
   <profiles>
	 <profile>
       <id>gwt-1.4.61</id> 
       <properties>
         <google.webtoolkit.home>c:\opt\gwt-windows-1.4.61</google.webtoolkit.home>
         <!-- add -XstartOnFirstThread to extra JVM args for MAC -->
         <google.webtoolkit.extrajvmargs>-Xms256m -Xmx512m</google.webtoolkit.extrajvmargs>
       </properties>
     </profile>
   </profiles> 
   <activeProfiles>
     <activeProfile>gwt-1.4.61</activeProfile>
   </activeProfiles>
</settings>


BUILD/RUN
---------

"mvn clean gwt:gwt"

You may run into missing deps for JTA and JDBC. 
These are older versions of these projects that Sun required 
a manual license acceptance and download for, so they are not
in normal public repos (yeah Sun!). 

If deps are missing, follow the instructions to download and install locally.

When you run the project via Maven, JPA will create the table structure. 
After that is done the "statelookup" and "typelookup" tables MUST be populated 
with src/main/sql/ states.sql and types.sql (this is a pain point, yes, future
plan to use HSQL and remove entire need to use outside DB/populate tables).


USING YOUR IDE
--------------

If you use Eclipse, one of the big Maven advantages is that
you don't need IDE specific files with the project, rather you use Maven
to create those files and import the project. 

"mvn eclipse:eclipse" 
then "Import->Existing Projects Into Workspace->Browse  . . ."

If you use NetBeans you can look at Mevenide to incorporate Maven and NetBeans. 



        
        




